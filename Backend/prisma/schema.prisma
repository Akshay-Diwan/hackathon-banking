// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
model User {
  id        String     @id @default(uuid())
  email     String     @unique
  phone     String     @unique
  password  String
  name      String
  kyc        KYC?       @relation(fields: [kycId], references: [id])
  kycId      String?    @unique
  accounts  Account[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
model KYC {
  id           String     @id @default(uuid())
  dateOfBirth  DateTime
  panNumber    String     @unique
  aadhaar      String     @unique
  address      String
  status       KYCStatus  @default(PENDING)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  user         User?
}

enum KYCStatus {
  PENDING
  VERIFIED
  REJECTED
}

model Account {
  id            String        @id @default(uuid())
  accountNumber String        @unique
  type          AccountType
  balance       Float         @default(0.0)
  ifscCode      String
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  transactionsSent     Transaction[] @relation("SentTransactions")
  transactionsReceived Transaction[] @relation("ReceivedTransactions")
  createdAt     DateTime      @default(now())
}

model Transaction {
  id              String     @id @default(uuid())
  amount          Float
  description     String?
  timestamp       DateTime   @default(now())
  type            TransactionType

  fromAccountId   String
  toAccountId     String

  fromAccount     Account    @relation("SentTransactions", fields: [fromAccountId], references: [id])
  toAccount       Account    @relation("ReceivedTransactions", fields: [toAccountId], references: [id])
}

enum AccountType {
  SAVINGS
  CURRENT
  FIXED_DEPOSIT
  LOAN
}

enum TransactionType {
  DEBIT
  CREDIT
  TRANSFER
}
generator client {
  provider = "prisma-client-js"
  output   = "../generate/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
